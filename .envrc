# if [[ $(conda info | grep active | cut -d ':' -f 2) != ' None' ]]; then
#   conda deactivate
# fi
# source "${HOME}/.aws/py3/bin/activate"

function conda_setup()
{
    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
            . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
        else
            export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
        fi
    fi
    unset __conda_setup
    # <<< conda initialize <<<
}

conda_setup
conda activate data_science_on_aws

export AWS_DEFAULT_PROFILE=dataeng

aws_completer=$(which aws_bash_completer)
# echo "${aws_completer}"
source "${aws_completer}"
complete -C "${aws_completer}" aws


NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
nvm use 14
npm config delete prefix

# Check if yarn is installed
npm list -g yarn &>/dev/null
if [[ "$?" == 1 ]]
then npm install -g yarn
else yarn set version berry ; echo "Using yarn $(yarn --version)"
fi
yarn plugin import typescript
